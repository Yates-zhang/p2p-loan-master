<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.vanguard.p2p.base.mapper.EmailMapper" >
  <resultMap id="BaseResultMap" type="com.vanguard.p2p.base.domain.Email" >
    <id column="email_id" property="emailId" jdbcType="BIGINT" />
    <result column="email_sign" property="emailSign" jdbcType="BIGINT" />
    <result column="user_email" property="userEmail" jdbcType="VARCHAR" />
    <result column="email_type" property="emailType" jdbcType="TINYINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="start_time" property="startTime" jdbcType="TIMESTAMP" />
    <result column="end_time" property="endTime" jdbcType="TIMESTAMP" />
    <result column="new_email" property="newEmail" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="BIT" />
    <result column="send_status" property="sendStatus" jdbcType="BIT" />
    <result column="captcha" property="captcha" jdbcType="VARCHAR" />
    <result column="email_subject" property="emailSubject" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.vanguard.p2p.base.domain.Email" extends="BaseResultMap" >
    <result column="email_content" property="emailContent" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    email_id, email_sign, user_email, email_type, create_time, start_time, end_time, 
    new_email, status, send_status, captcha, email_subject
  </sql>
  <sql id="Blob_Column_List" >
    email_content
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.vanguard.p2p.base.example.EmailExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from email
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.vanguard.p2p.base.example.EmailExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from email
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from email
    where email_id = #{emailId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from email
    where email_id = #{emailId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.vanguard.p2p.base.example.EmailExample" >
    delete from email
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.vanguard.p2p.base.domain.Email" >
    insert into email (email_id, email_sign, user_email, 
      email_type, create_time, start_time, 
      end_time, new_email, status, 
      send_status, captcha, email_subject, 
      email_content)
    values (#{emailId,jdbcType=BIGINT}, #{emailSign,jdbcType=BIGINT}, #{userEmail,jdbcType=VARCHAR}, 
      #{emailType,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, #{startTime,jdbcType=TIMESTAMP}, 
      #{endTime,jdbcType=TIMESTAMP}, #{newEmail,jdbcType=VARCHAR}, #{status,jdbcType=BIT}, 
      #{sendStatus,jdbcType=BIT}, #{captcha,jdbcType=VARCHAR}, #{emailSubject,jdbcType=VARCHAR}, 
      #{emailContent,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.vanguard.p2p.base.domain.Email" >
    insert into email
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="emailId != null" >
        email_id,
      </if>
      <if test="emailSign != null" >
        email_sign,
      </if>
      <if test="userEmail != null" >
        user_email,
      </if>
      <if test="emailType != null" >
        email_type,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="startTime != null" >
        start_time,
      </if>
      <if test="endTime != null" >
        end_time,
      </if>
      <if test="newEmail != null" >
        new_email,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="sendStatus != null" >
        send_status,
      </if>
      <if test="captcha != null" >
        captcha,
      </if>
      <if test="emailSubject != null" >
        email_subject,
      </if>
      <if test="emailContent != null" >
        email_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="emailId != null" >
        #{emailId,jdbcType=BIGINT},
      </if>
      <if test="emailSign != null" >
        #{emailSign,jdbcType=BIGINT},
      </if>
      <if test="userEmail != null" >
        #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="emailType != null" >
        #{emailType,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="newEmail != null" >
        #{newEmail,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=BIT},
      </if>
      <if test="sendStatus != null" >
        #{sendStatus,jdbcType=BIT},
      </if>
      <if test="captcha != null" >
        #{captcha,jdbcType=VARCHAR},
      </if>
      <if test="emailSubject != null" >
        #{emailSubject,jdbcType=VARCHAR},
      </if>
      <if test="emailContent != null" >
        #{emailContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.vanguard.p2p.base.example.EmailExample" resultType="java.lang.Integer" >
    select count(*) from email
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update email
    <set >
      <if test="record.emailId != null" >
        email_id = #{record.emailId,jdbcType=BIGINT},
      </if>
      <if test="record.emailSign != null" >
        email_sign = #{record.emailSign,jdbcType=BIGINT},
      </if>
      <if test="record.userEmail != null" >
        user_email = #{record.userEmail,jdbcType=VARCHAR},
      </if>
      <if test="record.emailType != null" >
        email_type = #{record.emailType,jdbcType=TINYINT},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.startTime != null" >
        start_time = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null" >
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.newEmail != null" >
        new_email = #{record.newEmail,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=BIT},
      </if>
      <if test="record.sendStatus != null" >
        send_status = #{record.sendStatus,jdbcType=BIT},
      </if>
      <if test="record.captcha != null" >
        captcha = #{record.captcha,jdbcType=VARCHAR},
      </if>
      <if test="record.emailSubject != null" >
        email_subject = #{record.emailSubject,jdbcType=VARCHAR},
      </if>
      <if test="record.emailContent != null" >
        email_content = #{record.emailContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update email
    set email_id = #{record.emailId,jdbcType=BIGINT},
      email_sign = #{record.emailSign,jdbcType=BIGINT},
      user_email = #{record.userEmail,jdbcType=VARCHAR},
      email_type = #{record.emailType,jdbcType=TINYINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      start_time = #{record.startTime,jdbcType=TIMESTAMP},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      new_email = #{record.newEmail,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=BIT},
      send_status = #{record.sendStatus,jdbcType=BIT},
      captcha = #{record.captcha,jdbcType=VARCHAR},
      email_subject = #{record.emailSubject,jdbcType=VARCHAR},
      email_content = #{record.emailContent,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update email
    set email_id = #{record.emailId,jdbcType=BIGINT},
      email_sign = #{record.emailSign,jdbcType=BIGINT},
      user_email = #{record.userEmail,jdbcType=VARCHAR},
      email_type = #{record.emailType,jdbcType=TINYINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      start_time = #{record.startTime,jdbcType=TIMESTAMP},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      new_email = #{record.newEmail,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=BIT},
      send_status = #{record.sendStatus,jdbcType=BIT},
      captcha = #{record.captcha,jdbcType=VARCHAR},
      email_subject = #{record.emailSubject,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.vanguard.p2p.base.domain.Email" >
    update email
    <set >
      <if test="emailSign != null" >
        email_sign = #{emailSign,jdbcType=BIGINT},
      </if>
      <if test="userEmail != null" >
        user_email = #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="emailType != null" >
        email_type = #{emailType,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="startTime != null" >
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="newEmail != null" >
        new_email = #{newEmail,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=BIT},
      </if>
      <if test="sendStatus != null" >
        send_status = #{sendStatus,jdbcType=BIT},
      </if>
      <if test="captcha != null" >
        captcha = #{captcha,jdbcType=VARCHAR},
      </if>
      <if test="emailSubject != null" >
        email_subject = #{emailSubject,jdbcType=VARCHAR},
      </if>
      <if test="emailContent != null" >
        email_content = #{emailContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where email_id = #{emailId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.vanguard.p2p.base.domain.Email" >
    update email
    set email_sign = #{emailSign,jdbcType=BIGINT},
      user_email = #{userEmail,jdbcType=VARCHAR},
      email_type = #{emailType,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      new_email = #{newEmail,jdbcType=VARCHAR},
      status = #{status,jdbcType=BIT},
      send_status = #{sendStatus,jdbcType=BIT},
      captcha = #{captcha,jdbcType=VARCHAR},
      email_subject = #{emailSubject,jdbcType=VARCHAR},
      email_content = #{emailContent,jdbcType=LONGVARCHAR}
    where email_id = #{emailId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.vanguard.p2p.base.domain.Email" >
    update email
    set email_sign = #{emailSign,jdbcType=BIGINT},
      user_email = #{userEmail,jdbcType=VARCHAR},
      email_type = #{emailType,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      new_email = #{newEmail,jdbcType=VARCHAR},
      status = #{status,jdbcType=BIT},
      send_status = #{sendStatus,jdbcType=BIT},
      captcha = #{captcha,jdbcType=VARCHAR},
      email_subject = #{emailSubject,jdbcType=VARCHAR}
    where email_id = #{emailId,jdbcType=BIGINT}
  </update>
</mapper>